name: Benchmark PR
on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  otp: 26.2
  elixir: 1.16.2

jobs:
  benchmark:
    name: Benchmark and Report
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        # with:
        #   fetch-depth: 50 # this is to make sure we obtain the target base commit

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.elixir }}
          otp-version: ${{ env.otp }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: bench-${{ runner.os }}-elixir-${{ env.elixir }}-otp-${{ env.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: MIX_ENV=bench mix do deps.get, deps.compile

      - name: Build
        run: MIX_ENV=bench mix compile

      - name: Download previous run
        id: download
        uses: actions/download-artifact@v4
        with:
          name: pr-${{ github.event.number }}
          path: 'benchmarks/profile/saves'
        continue-on-error: true

      - name: Benchmark base
        if: ${{ steps.download.conclusion == 'failure' }}
        run: |
          git checkout ${{ github.event.pull_request.base.sha }}
          mix bench.profile.run --tag base
          git checkout ${{ github.event.pull_request.head.sha }}

      - name: Benchmark head
        run: mix bench.profile.run --tag ${{ github.event.pull_request.head.sha }} --profile

      - name: Upload run
        uses: actions/upload-artifact@v4
        with:
          name: pr-${{ github.event.number }}
          path: 'benchmarks/profile/saves'
          overwrite: true

      - name: Generate Report
        run: |
          mix bench.profile.report

      - name: Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let body = require('fs').readFileSync('./benchmarks/profile/saves/report.md').toString();

            var list;
            await list = github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            console.log(list);
            console.log(typeof(list));
            let filtered = list.filter((issue) => issue.user.login == 'github-actions[bot]');

            if (filtered == []) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            } else {
              github.rest.issues.updateComment({
                comment_id: filtered[0].id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }
